name: Action Tests

on:
  push:
    branches: [ "master" ]
    tags: [ "v*" ]
  pull_request:
    branches: [ "**" ]
  workflow_dispatch:

permissions:
  contents: read

jobs:
  read-dir:
    runs-on: csas-linux
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read apps metadata
        id: meta
        uses: ./
        with:
          dir: test/fixtures
          recursive: true

      - name: Write result to a file
        run: |-
          echo "$JSON" | yq -ojson -P -I2 >/tmp/actual.json
        env:
          JSON: ${{ steps.meta.outputs.apps }}

      - name: Verify files
        run: |-
          [ "$FILES" == '["a.yaml","laf/manifest-weblogic.yml","subdir/b.yml"]' ] || exit 2
        env:
          FILES: ${{ steps.meta.outputs.files }}

      - name: Verify apps
        run: diff -Z test/fixtures/expected.json /tmp/actual.json

  single:
    runs-on: csas-linux
    timeout-minutes: 5
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Read apps metadata
        id: meta
        uses: ./
        with:
          dir: test/fixtures
          files: subdir/b.yml

      - name: Verify files
        run: |-
          [ "$FILES" == '["subdir/b.yml"]' ] || exit 2
        env:
          FILES: ${{ steps.meta.outputs.files }}

      - name: Verify outputs
        run: |-
          [ '${{ steps.meta.outputs.file }}' == 'subdir/b.yml' ] || exit 3
          [ '${{ steps.meta.outputs.name }}' == 'b-name' ] || exit 4
          [ '${{ steps.meta.outputs.repoURL }}' == 'https://artifactory.csin.cz:443/artifactory/api/helm/foo-bar-helm' ] || exit 5
          [ '${{ steps.meta.outputs.repoName }}' == 'foo-bar-helm' ] || exit 6
          [ '${{ steps.meta.outputs.chart }}' == 'b-chart' ] || exit 7
          [ '${{ steps.meta.outputs.version }}' == '3.4.5' ] || exit 8
          [ '${{ steps.meta.outputs.values }}' == 'foobar: 34' ] || exit 9

  # Meta-job, joining all tests, so it can be used easily in the branch protection rule
  # This is not very effective, but it works
  all:
    name: Action Tests
    runs-on: ubuntu-latest
    needs:
      - read-dir
      - single
    steps:
      - run: echo OK
