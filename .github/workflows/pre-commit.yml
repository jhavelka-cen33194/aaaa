name: Pre-commit

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches-ignore: [ "pre-commit/**" ]
  workflow_dispatch:

jobs:
  pre-commit:
    name: pre-commit
    runs-on: csas-linux
    timeout-minutes: 5
    permissions:
      contents: write
      pull-requests: write
    steps:
      # Checkout
      - name: Checkout
        uses: actions/checkout@v4

      - name: Ref name
        run: echo "REF_NAME=${REF##refs/heads/}" >> $GITHUB_ENV
        env:
          REF: ${{ github.head_ref || github.ref }}

      # Login
      - name: Artifactory login
        uses: csas-actions/artifactory-login@v1
        with:
          username: ${{ secrets.ARTIFACTORY_USERNAME }}
          password: ${{ secrets.ARTIFACTORY_ACCESS_TOKEN }}

      # Setup
      - name: Setup node
        uses: actions/setup-node@v4
        with:
          node-version: 20
          cache: npm

      - name: Install dependencies
        run: npm ci

      # Init pre-commit
      - name: Install pre-commit
        run: pip install pre-commit

      - name: Cache
        uses: actions/cache@v4
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('**/.pre-commit-config.yaml') }}

      - name: Initialize
        run: pre-commit install

      # Check
      - name: Check
        run: pre-commit run -a

      # Create PR if needed
      - name: Create Pull Request
        uses: peter-evans/create-pull-request@v6
        if: always()
        with:
          title: "chore(pre-commit): auto-format code on ${{ env.REF_NAME }}"
          commit-message: |-
            chore(pre-commit): auto-format code

            Reformat code according to pre-defined rules.
          body: "Reformat code according to pre-defined rules."
          branch: pre-commit/${{ env.REF_NAME }}
          base: ${{ env.REF_NAME }}
          delete-branch: true
          labels: bot
